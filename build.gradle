plugins {
    id 'java'
    id 'application'
}

ext {
    jmeUtilsVersion = "[1.0,)"
    jmeVersion = "[3.2,)"
    slf4jVersion = "[2.0,)"
    log4j2Version = "[2.13,)"
    jacksonVersion = "[2.10,)"
}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    implementation "com.rvandoosselaer:jme-utils:${jmeUtilsVersion}"

    // JME
    implementation "org.jmonkeyengine:jme3-core:${jmeVersion}"
    implementation "org.jmonkeyengine:jme3-desktop:${jmeVersion}"
    implementation "org.jmonkeyengine:jme3-lwjgl:${jmeVersion}"

    // Logging
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    implementation "org.apache.logging.log4j:log4j-api:${log4j2Version}"
    implementation "org.apache.logging.log4j:log4j-core:${log4j2Version}"
    implementation "org.apache.logging.log4j:log4j-slf4j18-impl:${log4j2Version}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
}

application {
    mainClassName = 'com.rvandoosselaer.jmemodelviewer.Main'
    applicationDefaultJvmArgs = [
            "-Dlog4j.configurationFile=[MY_APP_HOME]/conf/log4j2.yml",
            "-Dapplication.configurationFile=[MY_APP_HOME]/conf/application.properties"
    ]
}

build {
    dependsOn copyDistFiles
}

clean {
    dependsOn cleanNatives
    dependsOn cleanDistFolder
}

jar {
    exclude("**/application.properties")
    exclude("**/log4j2.yml")
}

test {
    useJUnitPlatform()
}

task cleanNatives(type: Delete) {
    delete "$projectDir/liblwjgl.dylib"
    delete "$projectDir/libopenal.dylib"
}

task cleanDistFolder(type: Delete) {
    delete "$projectDir/src/dist"
}

task copyDistFiles(type: Copy) {
    from file("$projectDir/src/main/resources/application.properties") into file("$projectDir/src/dist/conf")
    from file("$projectDir/src/main/resources/log4j2.yml") into file("$projectDir/src/dist/conf")
}

startScripts.doLast {
    unixScript.text = unixScript.text.replace('[MY_APP_HOME]', '\$APP_HOME')
    windowsScript.text = windowsScript.text.replace('[MY_APP_HOME]', '%~dp0..')
}